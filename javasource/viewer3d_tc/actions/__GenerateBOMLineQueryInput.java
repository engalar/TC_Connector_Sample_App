// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package viewer3d_tc.actions;

import java.util.ArrayList;
import java.util.Base64;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.thirdparty.org.json.JSONObject;

public class __GenerateBOMLineQueryInput extends CustomJavaAction<java.lang.String>
{
	private IMendixObject __itemRevision;
	private tcconnector.proxies.ItemRevision itemRevision;
	private IMendixObject __revisionRule;
	private tcconnector.proxies.RevisionRule revisionRule;
	private java.util.List<IMendixObject> __variantRuleList;
	private java.util.List<tcconnector.proxies.VariantRule> variantRuleList;
	private IMendixObject __bomWindowPropFlagMap;
	private tcconnector.proxies.BomWindowPropFlagMap bomWindowPropFlagMap;

	public __GenerateBOMLineQueryInput(IContext context, IMendixObject itemRevision, IMendixObject revisionRule, java.util.List<IMendixObject> variantRuleList, IMendixObject bomWindowPropFlagMap)
	{
		super(context);
		this.__itemRevision = itemRevision;
		this.__revisionRule = revisionRule;
		this.__variantRuleList = variantRuleList;
		this.__bomWindowPropFlagMap = bomWindowPropFlagMap;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		this.itemRevision = __itemRevision == null ? null : tcconnector.proxies.ItemRevision.initialize(getContext(), __itemRevision);

		this.revisionRule = __revisionRule == null ? null : tcconnector.proxies.RevisionRule.initialize(getContext(), __revisionRule);

		this.variantRuleList = new java.util.ArrayList<tcconnector.proxies.VariantRule>();
		if (__variantRuleList != null)
			for (IMendixObject __variantRuleListElement : __variantRuleList)
				this.variantRuleList.add(tcconnector.proxies.VariantRule.initialize(getContext(), __variantRuleListElement));

		this.bomWindowPropFlagMap = __bomWindowPropFlagMap == null ? null : tcconnector.proxies.BomWindowPropFlagMap.initialize(getContext(), __bomWindowPropFlagMap);

		// BEGIN USER CODE
		JSONObject query = new JSONObject();

		if (itemRevision != null) {
			JSONObject itemRev = new JSONObject();
			itemRev.put("uid", itemRevision.getUID());
			query.put("itemRev", itemRev);
		}

		if (revisionRule != null) {
			String uid = revisionRule.getUID();
			if (!uid.isEmpty() && !uid.equals("AAAAAAAAAAAAAA")) {
				JSONObject revRule = new JSONObject();
				revRule.put("uid", uid);
				JSONObject revRuleConfigInfo = new JSONObject();
				revRuleConfigInfo.put("revRule", revRule);
				query.put("revRuleConfigInfo", revRuleConfigInfo);
			}
		}

		if (variantRuleList.size() > 0) {
			var objectsForConfigure = new ArrayList<JSONObject>();
			for (var variantRule: variantRuleList) {
				String uid = variantRule.getUID();
				if (!uid.isEmpty() && !uid.equals("AAAAAAAAAAAAAA")) {
					JSONObject objForConfig = new JSONObject();
					objForConfig.put("uid", uid);
					objectsForConfigure.add(objForConfig);	
				}
			}
			query.put("objectsForConfigure", objectsForConfigure);
		}

		if (bomWindowPropFlagMap != null) {
			JSONObject bomWinPropFlagMap = new JSONObject();
			bomWinPropFlagMap.put("show_unconfigured_variants", bomWindowPropFlagMap.getshow_unconfigured_variants());
			bomWinPropFlagMap.put("show_unconfigured_changes", bomWindowPropFlagMap.getshow_unconfigured_changes());
			bomWinPropFlagMap.put("show_suppressed_occurrences", bomWindowPropFlagMap.getshow_suppressed_occurrences());
			bomWinPropFlagMap.put("is_packed_by_default", bomWindowPropFlagMap.getis_packed_by_default());
			bomWinPropFlagMap.put("show_out_of_context_lines", bomWindowPropFlagMap.getshow_out_of_context_lines());
			bomWinPropFlagMap.put("fnd0show_uncnf_occ_eff", bomWindowPropFlagMap.getfnd0show_uncnf_occ_eff());
			bomWinPropFlagMap.put("fnd0bw_in_cv_cfg_to_load_md", bomWindowPropFlagMap.getfnd0bw_in_cv_cfg_to_load_md());
			query.put("bomWinPropFlagMap", bomWinPropFlagMap);
		}

		String queryInput = query.toString();
		
		final Base64.Encoder encoder = Base64.getEncoder();
		String finalResult = encoder.encodeToString(queryInput.getBytes("UTF-8"));

		return finalResult;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "__GenerateBOMLineQueryInput";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
